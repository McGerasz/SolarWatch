name: Docker Compose Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore SolarWatch/SolarWatch.sln
      - name: Build
        run: dotnet build SolarWatch/SolarWatch/SolarWatch.csproj --no-restore
      - name: Test
        run: dotnet test SolarWatch/SolarWatch.sln --no-restore --verbosity normal

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Compose
        run: docker-compose --version
        continue-on-error: true
      - name: Build and Start Docker Compose
        run: |
          docker-compose build
          docker-compose up -d
        working-directory: SolarWatch
        env:
            DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            ASPNETCORE_CONNECTIONSTRING: ${{secrets.CONNECTIONSTRING}}
            ASPNETCORE_GEOLOCATORAPIKEY: ${{secrets.GEOLOCATORAPIKEY}}
            ASPNETCORE_VALIDISSUER: ${{secrets.ASPNETCORE_VALIDISSUER}}
            ASPNETCORE_VALIDAUDIENCE: ${{secrets.ASPNETCORE_VALIDAUDIENCE}}
            ASPNETCORE_ISSUERSIGNINGKEY: ${{secrets.ASPNETCORE_ISSUERSIGNINGKEY}}
            ASPNETCORE_ADMINEMAIL: ${{secrets.ASPNETCORE_ADMINEMAIL}}
            ASPNETCORE_ADMINPASSWORD: ${{secrets.ASPNETCORE_ADMINPASSWORD}}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Push Docker Compose Image to DockerHub
        run: docker-compose push
        working-directory: SolarWatch